%% Get Peron's Name And Ask If They Want Grayscale Images Too:
User_Answer1 = input('Please enter the persons name: ', 's');
User_Answer2 = input('Would you like to capture grayscale images as well? (Yes/No): ', 's');
%% Create Directories:

switch User_Answer2
    case 'Yes'
        booleanGrayscale = true;
        GrayscaleLocation = strcat('FaceDatabase/', personName, '/' , personName, 'Gray');
    case 'No'
        booleanGrayscale = false;
    otherwise
        disp('Please type "Yes" or "No" only!');
        pause(6);
        Add_Person_To_Database;
end

personName = User_Answer1;

% Checks if the FaceDatabase folder exists. 
% If it does not exist, then it created the folder. 
% This is the folder that will contain all the images of faces.
if ~exist('FaceDatabase', 'dir')
    mkdir('FaceDatabase');
end

% Checks if there is a folder with this specific name.
% If there is a folder with the specific name, then that person is already
% in the database, or must choose a different name.
% If the folder doesnt exist, then it creates the folder where the face
% images will be stored from this session.
faceDir = strcat('FaceDatabase/', personName);
if exist(faceDir, 'dir')
    disp('Database already contains this person. Please wait 3 seconds and try again.')
    pause(3);
    clear;
    clc;
    Facial_Recognition_System_Menu;
else
    mkdir(strcat('FaceDatabase/', personName));
end

%% Create Necessary Variables:
% This is the object detector, that will detect faces from image files.
faceDetector = vision.CascadeObjectDetector('FrontalFaceCART', 'MinSize', [150 150]);

% This variable will count the number of face images taken.
imCount = 1;

% This will create a object variable that will give access to the camera.
camObj = webcam();

% This takes a picture from the camera, and then gets the size of the
% variable that contains the height and width of the frame.
videoFrame = snapshot(camObj);
frameSize = size(videoFrame);

% This creates the video player that will be used to show real-time video
% stream from the webcam object that was created above.
videoPlayer = vision.VideoPlayer('Position', [200 300 [frameSize(2), frameSize(1)]]);

%% While Loop, Which Detects The Face, Crops The Face And Then Adds It To The Database:

while imCount <= 200
    % Gets a frame from the webcam connection.
    videoFrame = snapshot(camObj);
    
    % Uses the cascade object created previously to detect a face in the frame.
    % Uses the Viola-Jones algorithm.
    bbox = step(faceDetector, videoFrame);
    
    % Gets the size of bbox, which shows how many faces are in the frame.
    bboxSize = size(bbox, 1);
    
    % Checks if there is one face in the frame.
    if bboxSize == 1
        %Crops the frame image, so it only keeps the persons' face.
        faceCroppedFrame = imcrop(videoFrame, [bbox(1) bbox(2) bbox(3) bbox(4)]);
        
        % Resize's the image to 400 by 400. To keep constant pixel count.
        % As it is important to keep the same pixel count for all faces.
        resizedImage = imresize(faceCroppedFrame, [400 400]);
        
        % Saves the image in the directory of the current person.
        saveImage = [faceDir, '/image_', num2str(imCount), '.jpg'];
        imwrite(resizedImage, saveImage);
        
        % Checks if the user selected to use grayscale images.
        if booleanGrayscale
            % Returns the resized image in grayscale.
            % Saves the image in the Gray folder of that person.
            resizedImageGray = rgb2gray(resizedImage);
            saveImageGray = [GrayscaleLocation, '/image_', num2str(imCount), '.jpg'];
            imwrite(resizedImageGray, saveImageGray);
        end
        
        % For every face image saved, the count increments, until it reaches 200.
        imCount = imCount + 1;
    end
    
    % Adds the new frame to the video player.
    step(videoPlayer, videoFrame);
    
    % Keeps the video player open and updates the frames, as long as
    % the window is open.
    runLoop = isOpen(videoPlayer);
end
 % Release the video player resources.
release(videoPlayer);

% Clears the variables in the workspace.
clear;

% 
disp('Persons face has been successfully added to the database.');
disp('Please wait. Taking you back to Facial Recognition System main menu.');
pause(3);
clc;
Facial_Recognition_System_Menu;